// Code generated by protoc-gen-go. DO NOT EDIT.
// source: trade.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TradeMessage struct {
	BuyerId              string               `protobuf:"bytes,1,opt,name=buyer_id,json=buyerId,proto3" json:"buyer_id,omitempty"`
	SellerId             string               `protobuf:"bytes,2,opt,name=seller_id,json=sellerId,proto3" json:"seller_id,omitempty"`
	TakerId              string               `protobuf:"bytes,3,opt,name=taker_id,json=takerId,proto3" json:"taker_id,omitempty"`
	MakerId              string               `protobuf:"bytes,4,opt,name=maker_id,json=makerId,proto3" json:"maker_id,omitempty"`
	TakerOid             string               `protobuf:"bytes,5,opt,name=taker_oid,json=takerOid,proto3" json:"taker_oid,omitempty"`
	MakerOid             string               `protobuf:"bytes,6,opt,name=maker_oid,json=makerOid,proto3" json:"maker_oid,omitempty"`
	Amount               int64                `protobuf:"varint,7,opt,name=amount,proto3" json:"amount,omitempty"`
	Price                int64                `protobuf:"varint,8,opt,name=price,proto3" json:"price,omitempty"`
	Side                 Side                 `protobuf:"varint,9,opt,name=side,proto3,enum=proto.Side" json:"side,omitempty"`
	ProductId            string               `protobuf:"bytes,10,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	ExecutedAt           *timestamp.Timestamp `protobuf:"bytes,11,opt,name=executed_at,json=executedAt,proto3" json:"executed_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *TradeMessage) Reset()         { *m = TradeMessage{} }
func (m *TradeMessage) String() string { return proto.CompactTextString(m) }
func (*TradeMessage) ProtoMessage()    {}
func (*TradeMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee944bd90e8a0312, []int{0}
}

func (m *TradeMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TradeMessage.Unmarshal(m, b)
}
func (m *TradeMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TradeMessage.Marshal(b, m, deterministic)
}
func (m *TradeMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TradeMessage.Merge(m, src)
}
func (m *TradeMessage) XXX_Size() int {
	return xxx_messageInfo_TradeMessage.Size(m)
}
func (m *TradeMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_TradeMessage.DiscardUnknown(m)
}

var xxx_messageInfo_TradeMessage proto.InternalMessageInfo

func (m *TradeMessage) GetBuyerId() string {
	if m != nil {
		return m.BuyerId
	}
	return ""
}

func (m *TradeMessage) GetSellerId() string {
	if m != nil {
		return m.SellerId
	}
	return ""
}

func (m *TradeMessage) GetTakerId() string {
	if m != nil {
		return m.TakerId
	}
	return ""
}

func (m *TradeMessage) GetMakerId() string {
	if m != nil {
		return m.MakerId
	}
	return ""
}

func (m *TradeMessage) GetTakerOid() string {
	if m != nil {
		return m.TakerOid
	}
	return ""
}

func (m *TradeMessage) GetMakerOid() string {
	if m != nil {
		return m.MakerOid
	}
	return ""
}

func (m *TradeMessage) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *TradeMessage) GetPrice() int64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *TradeMessage) GetSide() Side {
	if m != nil {
		return m.Side
	}
	return Side_SELL
}

func (m *TradeMessage) GetProductId() string {
	if m != nil {
		return m.ProductId
	}
	return ""
}

func (m *TradeMessage) GetExecutedAt() *timestamp.Timestamp {
	if m != nil {
		return m.ExecutedAt
	}
	return nil
}

func init() {
	proto.RegisterType((*TradeMessage)(nil), "proto.TradeMessage")
}

func init() { proto.RegisterFile("trade.proto", fileDescriptor_ee944bd90e8a0312) }

var fileDescriptor_ee944bd90e8a0312 = []byte{
	// 280 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x3c, 0x90, 0x4f, 0x4b, 0xf4, 0x30,
	0x10, 0x87, 0xe9, 0xfe, 0x6d, 0x27, 0x2f, 0xef, 0x21, 0x88, 0xc4, 0x2e, 0xb2, 0xc5, 0x53, 0x4f,
	0x5d, 0x58, 0x8f, 0x9e, 0x3c, 0xf6, 0x20, 0x42, 0xdd, 0xfb, 0x92, 0x36, 0x63, 0x09, 0x36, 0xa6,
	0xa4, 0x29, 0xe8, 0xc7, 0xf5, 0x9b, 0x48, 0x33, 0xad, 0xa7, 0xf0, 0xfc, 0x9e, 0x99, 0x49, 0x32,
	0xc0, 0xbc, 0x93, 0x0a, 0x8b, 0xde, 0x59, 0x6f, 0xf9, 0x36, 0x1c, 0xe9, 0xb1, 0xb5, 0xb6, 0xed,
	0xf0, 0x14, 0xa8, 0x1e, 0xdf, 0x4f, 0x5e, 0x1b, 0x1c, 0xbc, 0x34, 0x3d, 0xd5, 0xa5, 0xcc, 0x3a,
	0x85, 0x8e, 0xe0, 0xe1, 0x67, 0x05, 0xff, 0x2e, 0xd3, 0x90, 0x17, 0x1c, 0x06, 0xd9, 0x22, 0xbf,
	0x83, 0xb8, 0x1e, 0xbf, 0xd1, 0x5d, 0xb5, 0x12, 0x51, 0x16, 0xe5, 0x49, 0xb5, 0x0f, 0x5c, 0x2a,
	0x7e, 0x80, 0x64, 0xc0, 0xae, 0x23, 0xb7, 0x0a, 0x2e, 0xa6, 0xa0, 0x54, 0x53, 0x9f, 0x97, 0x1f,
	0xe4, 0xd6, 0xd4, 0x17, 0x98, 0x94, 0x59, 0xd4, 0x86, 0x94, 0x99, 0xd5, 0x01, 0x12, 0xea, 0xb2,
	0x5a, 0x89, 0x2d, 0x8d, 0x0c, 0xc1, 0xab, 0x0e, 0xd2, 0xfc, 0xc9, 0x1d, 0x49, 0xb3, 0xc8, 0x5b,
	0xd8, 0x49, 0x63, 0xc7, 0x4f, 0x2f, 0xf6, 0x59, 0x94, 0xaf, 0xab, 0x99, 0xf8, 0x0d, 0x6c, 0x7b,
	0xa7, 0x1b, 0x14, 0x71, 0x88, 0x09, 0xf8, 0x11, 0x36, 0x83, 0x56, 0x28, 0x92, 0x2c, 0xca, 0xff,
	0x9f, 0x19, 0x7d, 0xbe, 0x78, 0xd3, 0x0a, 0xab, 0x20, 0xf8, 0x3d, 0x40, 0xef, 0xac, 0x1a, 0x1b,
	0x3f, 0xbd, 0x12, 0xc2, 0x65, 0xc9, 0x9c, 0x94, 0x8a, 0x3f, 0x01, 0xc3, 0x2f, 0x6c, 0x46, 0x8f,
	0xea, 0x2a, 0xbd, 0x60, 0x59, 0x94, 0xb3, 0x73, 0x5a, 0xd0, 0xaa, 0x8b, 0x65, 0xd5, 0xc5, 0x65,
	0x59, 0x75, 0x05, 0x4b, 0xf9, 0xb3, 0xaf, 0x77, 0xc1, 0x3f, 0xfe, 0x06, 0x00, 0x00, 0xff, 0xff,
	0x6e, 0x1d, 0x9e, 0x1c, 0xae, 0x01, 0x00, 0x00,
}
