version: '3'

services:
  apollo:
    build:
      context: ./apollo/
      dockerfile: Dockerfile
    command: ./apollo
    ports:
      - "8080:8080"
    env_file:
      - env/kafka.env
      - env/postgres.env
      - env/redis.env
    environment:
      - PORT=8080
      - KAFKA_CONS_GROUP=apollo
    depends_on:
      - db
      - redis
      - broker

  hermes:
    build:
      context: ./hermes/
      dockerfile: Dockerfile
    command: ./hermes
    ports:
      - "8000:8000"
    env_file:
      - env/postgres.env
      - env/kafka.env
    environment:
      - PORT=8000
      - KAFKA_CONS_GROUP=hermes
    depends_on:
      - db
      - broker

  matcher:
    build:
      context: ./matcher/
      dockerfile: Dockerfile
    command: ./matcher
    env_file:
      - env/kafka.env
      - env/postgres.env
      - matcher/.env
    environment:
      - BASE=BTC
      - QUOTE=USD
      - KAFKA_CONS_GROUP=matcher
    depends_on:
      - broker
      - db

  db:
    image: postgres:9.6
    restart: always
    volumes:
    - ./db/postgres_data:/var/lib/postgresql
    - ./db-init/:/docker-entrypoint-initdb.d/
    env_file:
      - env/postgres.env
    ports:
      - "5432:5432"

  redis:
    image: redis
    command: redis-server --requirepass redis_pass
    ports:
      - "6379:6379"

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-enterprise-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_HOST_NAME: broker
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
